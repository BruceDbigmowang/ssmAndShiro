<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.mapper.FunctionsMapper">
  <resultMap id="BaseResultMap" type="com.demo.pojo.Functions">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="func_id" jdbcType="INTEGER" property="funcId" />
    <result column="func_name" jdbcType="VARCHAR" property="funcName" />
    <result column="func_url" jdbcType="VARCHAR" property="funcUrl" />
    <result column="func_code" jdbcType="VARCHAR" property="funcCode" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="func_type" jdbcType="INTEGER" property="funcType" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="sort_num" jdbcType="INTEGER" property="sortNum" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    func_id, func_name, func_url, func_code, parent_id, func_type, status, sort_num, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.demo.pojo.FunctionsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_functions
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from tb_functions
    where func_id = #{funcId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tb_functions
    where func_id = #{funcId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.demo.pojo.Functions">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tb_functions (func_id, func_name, func_url, 
      func_code, parent_id, func_type, 
      status, sort_num, create_time, 
      update_time)
    values (#{funcId,jdbcType=INTEGER}, #{funcName,jdbcType=VARCHAR}, #{funcUrl,jdbcType=VARCHAR}, 
      #{funcCode,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{funcType,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{sortNum,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.pojo.Functions">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tb_functions
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="funcId != null">
        func_id,
      </if>
      <if test="funcName != null">
        func_name,
      </if>
      <if test="funcUrl != null">
        func_url,
      </if>
      <if test="funcCode != null">
        func_code,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="funcType != null">
        func_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="sortNum != null">
        sort_num,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="funcId != null">
        #{funcId,jdbcType=INTEGER},
      </if>
      <if test="funcName != null">
        #{funcName,jdbcType=VARCHAR},
      </if>
      <if test="funcUrl != null">
        #{funcUrl,jdbcType=VARCHAR},
      </if>
      <if test="funcCode != null">
        #{funcCode,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="funcType != null">
        #{funcType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="sortNum != null">
        #{sortNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.pojo.Functions">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_functions
    <set>
      <if test="funcName != null">
        func_name = #{funcName,jdbcType=VARCHAR},
      </if>
      <if test="funcUrl != null">
        func_url = #{funcUrl,jdbcType=VARCHAR},
      </if>
      <if test="funcCode != null">
        func_code = #{funcCode,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="funcType != null">
        func_type = #{funcType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="sortNum != null">
        sort_num = #{sortNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where func_id = #{funcId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.pojo.Functions">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_functions
    set func_name = #{funcName,jdbcType=VARCHAR},
      func_url = #{funcUrl,jdbcType=VARCHAR},
      func_code = #{funcCode,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      func_type = #{funcType,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      sort_num = #{sortNum,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where func_id = #{funcId,jdbcType=INTEGER}
  </update>
</mapper>